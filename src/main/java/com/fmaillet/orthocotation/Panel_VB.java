/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.fmaillet.orthocotation;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JSpinner;

/**
 *
 * @author Fred
 */
public class Panel_VB extends javax.swing.JPanel {

    /**
     * Creates new form BaseDatas
     */
    public Panel_VB() {
        initComponents();
        jPhoriePStateChanged (null) ;
        jPhorieLStateChanged (null) ;
        jFusionDPStateChanged (null) ;
        jFusionCPStateChanged (null) ;
        jFusionDLStateChanged (null) ;
        jFusionCLStateChanged (null) ;
        jPPAStateChanged (null) ;
        jPPCStateChanged (null) ;
        
        //Unités
        jUnit1.setText("\u0394");jUnit2.setText("\u0394");jUnit3.setText("\u0394");jUnit4.setText("\u0394");
        jUnit5.setText("\u0394");jUnit6.setText("\u0394");jUnit7.setText("\u0394");
        jUnit10.setText("\u0394/\u03B4");
        //jUnit8.setLocation(jUnit7.getX(), jUnit8.getY());
        
        //((JSpinner.DefaultEditor)jACA_0.getEditor()).addMouseListener(new MyMouseListener()) ;
    }
    
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);  
        g.drawRect(jLabel1.getX()-10,jLabel1.getY()-10,530,78);  
        /*g.setColor(Color.RED);  
        g.fillRect(230,80,10,10); */ 
    }
    
    double gradientACA, calculACA, meanACA ;
    boolean gradientACA_isValid = false ;
    boolean calculACA_isValid = false ;
    
    private void gradientACA () {
        int p0 = (int) jACA_0.getValue() ;
        int p1 = (int) jACA_1.getValue() ;
        int p2 = (int) jACA_2.getValue() ;
        int p3 = (int) jACA_3.getValue() ;
        
        gradientACA = (double)( (double)(p3-p2) + (double)(p2-p1) + (double)(p1-p0) ) / 3.0 ;
        
        jGradient.setText(String.format("%+.2f", gradientACA));
        gradientACA_isValid = true ;
        jCheckACA.setSelected(true);
        
        if (calculACA_isValid) meanACA = (gradientACA + calculACA) / 2 ;
        else meanACA = gradientACA ;
        jACA.setValue(Double.valueOf(meanACA)) ;
        //Déviation standard
        double ds = OrthoCotation.baseValues.updateACA ( meanACA, jCheckACA.isSelected() ) ;
        jACAds.setText(String.format("%+.2f", ds) + " DS");
    }
    
    private void calculACA () {
        double e = (double) jEIP.getValue() ;
        int p = (int) jACA_PP.getValue() ;
        int l = (int) jACA_PL.getValue() ;
        
        calculACA = e + .40 * (double) (p - l) ;
        jACA_Calcul.setText(String.format("%+.2f", calculACA));
        calculACA_isValid = true ;
        jCheckACA.setSelected(true);
        
        if (gradientACA_isValid) meanACA = (gradientACA + calculACA) / 2 ;
        else meanACA = calculACA ;
        jACA.setValue(Double.valueOf(meanACA)) ;
        //Déviation standard
        double ds = OrthoCotation.baseValues.updateACA ( meanACA, jCheckACA.isSelected() ) ;
        jACAds.setText(String.format("%+.2f", ds) + " DS");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPhorieL = new javax.swing.JSpinner();
        jPhorieP = new javax.swing.JSpinner();
        jPhorieLds = new javax.swing.JLabel();
        jPhoriePds = new javax.swing.JLabel();
        jCheckPhorieL = new javax.swing.JCheckBox();
        jCheckPhorieP = new javax.swing.JCheckBox();
        jCheckFusionDP = new javax.swing.JCheckBox();
        jFusionDP = new javax.swing.JSpinner();
        jFusionDPds = new javax.swing.JLabel();
        jCheckFusionCP = new javax.swing.JCheckBox();
        jFusionCP = new javax.swing.JSpinner();
        jFusionCPds = new javax.swing.JLabel();
        jCheckFusionDL = new javax.swing.JCheckBox();
        jFusionDL = new javax.swing.JSpinner();
        jFusionDLds = new javax.swing.JLabel();
        jCheckFusionCL = new javax.swing.JCheckBox();
        jFusionCL = new javax.swing.JSpinner();
        jFusionCLds = new javax.swing.JLabel();
        jPPC = new javax.swing.JSpinner();
        jPPA = new javax.swing.JSpinner();
        jPPCds = new javax.swing.JLabel();
        jPPAds = new javax.swing.JLabel();
        jCheckPPC = new javax.swing.JCheckBox();
        jCheckPPA = new javax.swing.JCheckBox();
        jUnit1 = new javax.swing.JLabel();
        jUnit2 = new javax.swing.JLabel();
        jUnit3 = new javax.swing.JLabel();
        jUnit4 = new javax.swing.JLabel();
        jUnit5 = new javax.swing.JLabel();
        jUnit6 = new javax.swing.JLabel();
        jUnit7 = new javax.swing.JLabel();
        jUnit8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jCheckACA = new javax.swing.JCheckBox();
        jACA_0 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jACA_1 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jACA_2 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jACA_3 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jGradient = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jEIP = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jUnit9 = new javax.swing.JLabel();
        jACA_PL = new javax.swing.JSpinner();
        jACA_PP = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jACA_Calcul = new javax.swing.JTextField();
        jACA = new javax.swing.JSpinner();
        jUnit10 = new javax.swing.JLabel();
        jACAds = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(500, 460));
        setLayout(null);

        jPhorieL.setModel(new javax.swing.SpinnerNumberModel(-1, null, null, 1));
        jPhorieL.setToolTipText("<html>Phorie de loin<br>Exo en négatif, éso en positif</html>");
        jPhorieL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jPhorieLStateChanged(evt);
            }
        });
        jPhorieL.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPhorieLPropertyChange(evt);
            }
        });
        add(jPhorieL);
        jPhorieL.setBounds(120, 11, 55, 20);

        jPhorieP.setModel(new javax.swing.SpinnerNumberModel(-3, null, null, 1));
        jPhorieP.setToolTipText("<html>Phorie de près<br>Exo en négatif, éso en positif</html>");
        jPhorieP.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jPhoriePStateChanged(evt);
            }
        });
        add(jPhorieP);
        jPhorieP.setBounds(120, 42, 55, 20);

        jPhorieLds.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPhorieLds.setForeground(java.awt.Color.red);
        jPhorieLds.setText("...");
        add(jPhorieLds);
        jPhorieLds.setBounds(207, 13, 57, 15);

        jPhoriePds.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPhoriePds.setForeground(java.awt.Color.red);
        jPhoriePds.setText("...");
        add(jPhoriePds);
        jPhoriePds.setBounds(207, 44, 57, 15);

        jCheckPhorieL.setSelected(true);
        jCheckPhorieL.setText("Phorie L :");
        jCheckPhorieL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckPhorieLStateChanged(evt);
            }
        });
        add(jCheckPhorieL);
        jCheckPhorieL.setBounds(35, 10, 80, 23);

        jCheckPhorieP.setSelected(true);
        jCheckPhorieP.setText("Phorie P :");
        jCheckPhorieP.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckPhoriePStateChanged(evt);
            }
        });
        add(jCheckPhorieP);
        jCheckPhorieP.setBounds(35, 41, 80, 23);

        jCheckFusionDP.setText("D' :");
        jCheckFusionDP.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckFusionDPStateChanged(evt);
            }
        });
        add(jCheckFusionDP);
        jCheckFusionDP.setBounds(35, 110, 50, 23);

        jFusionDP.setModel(new javax.swing.SpinnerNumberModel(12, null, null, 1));
        jFusionDP.setToolTipText("<html>Fusion en divergence de près<br>(sans signe)</html>");
        jFusionDP.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jFusionDPStateChanged(evt);
            }
        });
        add(jFusionDP);
        jFusionDP.setBounds(120, 111, 55, 20);

        jFusionDPds.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jFusionDPds.setForeground(java.awt.Color.red);
        jFusionDPds.setText("...");
        add(jFusionDPds);
        jFusionDPds.setBounds(207, 113, 66, 15);

        jCheckFusionCP.setText("C' :");
        jCheckFusionCP.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckFusionCPStateChanged(evt);
            }
        });
        add(jCheckFusionCP);
        jCheckFusionCP.setBounds(35, 141, 50, 23);

        jFusionCP.setModel(new javax.swing.SpinnerNumberModel(23, null, null, 1));
        jFusionCP.setToolTipText("<html>Fusion en convergence de près<br>(sans signe)</html>");
        jFusionCP.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jFusionCPStateChanged(evt);
            }
        });
        add(jFusionCP);
        jFusionCP.setBounds(120, 142, 55, 20);

        jFusionCPds.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jFusionCPds.setForeground(java.awt.Color.red);
        jFusionCPds.setText("...");
        add(jFusionCPds);
        jFusionCPds.setBounds(207, 144, 66, 15);

        jCheckFusionDL.setSelected(true);
        jCheckFusionDL.setText("D :");
        jCheckFusionDL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckFusionDLStateChanged(evt);
            }
        });
        add(jCheckFusionDL);
        jCheckFusionDL.setBounds(35, 203, 50, 23);

        jFusionDL.setModel(new javax.swing.SpinnerNumberModel(7, null, null, 1));
        jFusionDL.setToolTipText("<html>Fusion en divergence de loin<br>(sans signe)</html>");
        jFusionDL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jFusionDLStateChanged(evt);
            }
        });
        add(jFusionDL);
        jFusionDL.setBounds(120, 204, 55, 20);

        jFusionDLds.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jFusionDLds.setForeground(java.awt.Color.red);
        jFusionDLds.setText("...");
        add(jFusionDLds);
        jFusionDLds.setBounds(207, 206, 66, 15);

        jCheckFusionCL.setSelected(true);
        jCheckFusionCL.setText("C :");
        jCheckFusionCL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckFusionCLStateChanged(evt);
            }
        });
        jCheckFusionCL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckFusionCLActionPerformed(evt);
            }
        });
        add(jCheckFusionCL);
        jCheckFusionCL.setBounds(35, 172, 50, 23);

        jFusionCL.setModel(new javax.swing.SpinnerNumberModel(11, null, null, 1));
        jFusionCL.setToolTipText("<html>Fusion en convergence de loin<br>(sans signe)</html>");
        jFusionCL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jFusionCLStateChanged(evt);
            }
        });
        add(jFusionCL);
        jFusionCL.setBounds(120, 173, 55, 20);

        jFusionCLds.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jFusionCLds.setForeground(java.awt.Color.red);
        jFusionCLds.setText("...");
        add(jFusionCLds);
        jFusionCLds.setBounds(207, 175, 66, 15);

        jPPC.setModel(new javax.swing.SpinnerNumberModel(2.5d, null, null, 0.5d));
        jPPC.setToolTipText("PPC (en cm) sur cible acc.");
        jPPC.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jPPCStateChanged(evt);
            }
        });
        jPPC.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPPCPropertyChange(evt);
            }
        });
        add(jPPC);
        jPPC.setBounds(120, 254, 55, 20);

        jPPA.setModel(new javax.swing.SpinnerNumberModel(10.0d, 1.0d, null, 0.5d));
        jPPA.setToolTipText("Amplitude accommodative (en cm)");
        jPPA.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jPPAStateChanged(evt);
            }
        });
        add(jPPA);
        jPPA.setBounds(120, 285, 55, 20);

        jPPCds.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPPCds.setForeground(java.awt.Color.red);
        jPPCds.setText("...");
        add(jPPCds);
        jPPCds.setBounds(207, 256, 66, 15);

        jPPAds.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPPAds.setForeground(java.awt.Color.red);
        jPPAds.setText("[no age]");
        add(jPPAds);
        jPPAds.setBounds(284, 287, 66, 15);

        jCheckPPC.setSelected(true);
        jCheckPPC.setText("PPC :");
        jCheckPPC.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckPPCStateChanged(evt);
            }
        });
        add(jCheckPPC);
        jCheckPPC.setBounds(35, 253, 60, 23);

        jCheckPPA.setSelected(true);
        jCheckPPA.setText("PPA :");
        jCheckPPA.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckPPAStateChanged(evt);
            }
        });
        add(jCheckPPA);
        jCheckPPA.setBounds(35, 284, 60, 23);

        jUnit1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jUnit1.setText("d");
        add(jUnit1);
        jUnit1.setBounds(185, 15, 22, 13);

        jUnit2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jUnit2.setText("d");
        add(jUnit2);
        jUnit2.setBounds(185, 115, 22, 13);

        jUnit3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jUnit3.setText("d");
        add(jUnit3);
        jUnit3.setBounds(185, 46, 22, 13);

        jUnit4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jUnit4.setText("d");
        add(jUnit4);
        jUnit4.setBounds(185, 146, 22, 13);

        jUnit5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jUnit5.setText("d");
        add(jUnit5);
        jUnit5.setBounds(185, 177, 22, 13);

        jUnit6.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jUnit6.setText("d");
        add(jUnit6);
        jUnit6.setBounds(185, 208, 22, 13);

        jUnit7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jUnit7.setText("d");
        add(jUnit7);
        jUnit7.setBounds(185, 258, 22, 13);

        jUnit8.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jUnit8.setText("d");
        add(jUnit8);
        jUnit8.setBounds(185, 289, 78, 13);

        jLabel1.setText("Gradient :");
        add(jLabel1);
        jLabel1.setBounds(51, 376, 60, 14);

        jCheckACA.setText("AC/A :");
        jCheckACA.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckACAStateChanged(evt);
            }
        });
        add(jCheckACA);
        jCheckACA.setBounds(35, 331, 70, 23);

        jACA_0.setModel(new javax.swing.SpinnerNumberModel(-3, null, null, 1));
        jACA_0.setToolTipText("Exo en négatif, éso en positif");
        jACA_0.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jACA_0StateChanged(evt);
            }
        });
        jACA_0.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jACA_0PropertyChange(evt);
            }
        });
        add(jACA_0);
        jACA_0.setBounds(117, 373, 43, 20);

        jLabel2.setText("(-1)");
        add(jLabel2);
        jLabel2.setBounds(170, 376, 20, 14);

        jACA_1.setModel(new javax.swing.SpinnerNumberModel());
        jACA_1.setToolTipText("Exo en négatif, éso en positif");
        jACA_1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jACA_1StateChanged(evt);
            }
        });
        jACA_1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jACA_1PropertyChange(evt);
            }
        });
        add(jACA_1);
        jACA_1.setBounds(198, 373, 43, 20);

        jLabel3.setText("(-2)");
        add(jLabel3);
        jLabel3.setBounds(251, 376, 20, 14);

        jACA_2.setModel(new javax.swing.SpinnerNumberModel(6, null, null, 1));
        jACA_2.setToolTipText("Exo en négatif, éso en positif");
        jACA_2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jACA_2StateChanged(evt);
            }
        });
        jACA_2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jACA_2PropertyChange(evt);
            }
        });
        add(jACA_2);
        jACA_2.setBounds(279, 373, 43, 20);

        jLabel4.setText("(-3)");
        add(jLabel4);
        jLabel4.setBounds(332, 376, 30, 14);

        jACA_3.setModel(new javax.swing.SpinnerNumberModel(9, null, null, 1));
        jACA_3.setToolTipText("Exo en négatif, éso en positif");
        jACA_3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jACA_3StateChanged(evt);
            }
        });
        jACA_3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jACA_3PropertyChange(evt);
            }
        });
        add(jACA_3);
        jACA_3.setBounds(366, 373, 43, 20);

        jLabel5.setText("->");
        add(jLabel5);
        jLabel5.setBounds(419, 376, 12, 14);

        jGradient.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jGradient.setText("...");
        jGradient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGradientActionPerformed(evt);
            }
        });
        add(jGradient);
        jGradient.setBounds(441, 372, 45, 21);

        jLabel6.setText("Calculé :");
        add(jLabel6);
        jLabel6.setBounds(51, 415, 60, 14);

        jEIP.setModel(new javax.swing.SpinnerNumberModel(5.5d, 0.0d, null, 0.1d));
        jEIP.setToolTipText("Ecart Inter-pupillaire");
        jEIP.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jEIPStateChanged(evt);
            }
        });
        jEIP.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jEIPPropertyChange(evt);
            }
        });
        add(jEIP);
        jEIP.setBounds(150, 412, 43, 20);

        jLabel7.setText("EIP :");
        jLabel7.setToolTipText("Ecart Inter-pupillaire");
        add(jLabel7);
        jLabel7.setBounds(117, 415, 30, 14);

        jUnit9.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jUnit9.setText("cm");
        add(jUnit9);
        jUnit9.setBounds(203, 416, 24, 13);

        jACA_PL.setModel(new javax.swing.SpinnerNumberModel(-1, null, null, 1));
        jACA_PL.setToolTipText("<html>Phorie de loin<br>Exo en négatif, éso en positif</html>");
        jACA_PL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jACA_PLStateChanged(evt);
            }
        });
        jACA_PL.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jACA_PLPropertyChange(evt);
            }
        });
        add(jACA_PL);
        jACA_PL.setBounds(279, 412, 43, 20);

        jACA_PP.setModel(new javax.swing.SpinnerNumberModel(-3, null, null, 1));
        jACA_PP.setToolTipText("<html>Phorie de près<br>Exo en négatif, éso en positif</html>");
        jACA_PP.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jACA_PPStateChanged(evt);
            }
        });
        jACA_PP.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jACA_PPPropertyChange(evt);
            }
        });
        add(jACA_PP);
        jACA_PP.setBounds(366, 412, 43, 20);

        jLabel8.setText("P(L):");
        add(jLabel8);
        jLabel8.setBounds(246, 415, 30, 14);

        jLabel9.setText("P(P):");
        add(jLabel9);
        jLabel9.setBounds(332, 415, 30, 14);

        jLabel10.setText("->");
        add(jLabel10);
        jLabel10.setBounds(419, 415, 12, 14);

        jACA_Calcul.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jACA_Calcul.setText("...");
        jACA_Calcul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jACA_CalculActionPerformed(evt);
            }
        });
        add(jACA_Calcul);
        jACA_Calcul.setBounds(441, 411, 45, 21);

        jACA.setModel(new javax.swing.SpinnerNumberModel(3.0d, 1.0d, null, 0.5d));
        jACA.setToolTipText("Rapport Accommodation-Convergence");
        jACA.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jACAStateChanged(evt);
            }
        });
        add(jACA);
        jACA.setBounds(120, 332, 55, 20);

        jUnit10.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jUnit10.setText("d");
        add(jUnit10);
        jUnit10.setBounds(185, 336, 17, 13);

        jACAds.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jACAds.setForeground(java.awt.Color.red);
        jACAds.setText("...");
        add(jACAds);
        jACAds.setBounds(208, 334, 66, 15);
    }// </editor-fold>//GEN-END:initComponents

    private void jPhorieLPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPhorieLPropertyChange
        
    }//GEN-LAST:event_jPhorieLPropertyChange

    private void jPhorieLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jPhorieLStateChanged
        int p = (int) jPhorieL.getValue() ;

        double ds = OrthoCotation.baseValues.updatePhorieL ( p, jCheckPhorieL.isSelected() ) ;
        jPhorieLds.setText(String.format("%+.2f", ds) + " DS");
    }//GEN-LAST:event_jPhorieLStateChanged

    private void jPhoriePStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jPhoriePStateChanged
        int p = (int) jPhorieP.getValue() ;
        double ds = OrthoCotation.baseValues.updatePhorieP ( p, jCheckPhorieP.isSelected() ) ;
        jPhoriePds.setText(String.format("%+.2f", ds) + " DS");
    }//GEN-LAST:event_jPhoriePStateChanged

    private void jCheckPhorieLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckPhorieLStateChanged
        jPhorieLStateChanged (null) ;
    }//GEN-LAST:event_jCheckPhorieLStateChanged

    private void jCheckPhoriePStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckPhoriePStateChanged
        jPhoriePStateChanged (null) ;
    }//GEN-LAST:event_jCheckPhoriePStateChanged

    private void jCheckFusionDPStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckFusionDPStateChanged
        jFusionDPStateChanged (null) ;
    }//GEN-LAST:event_jCheckFusionDPStateChanged

    private void jFusionDPStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jFusionDPStateChanged
        int p = (int) jFusionDP.getValue() ;
        if (OrthoCotation.baseValues.patientAge.years != 0) {
            double ds = OrthoCotation.baseValues.updateFusionDP ( p, jCheckFusionDP.isSelected() ) ;
            jFusionDPds.setText(String.format("%+.2f", ds) + " DS");
            jFusionDPds.setToolTipText(null);
            jFusionDPds.setForeground(Color.RED);
        }
        else {
            jFusionDPds.setText("[no age]") ;
            jFusionDPds.setToolTipText("Précisez la date de naissance...");
            jCheckFusionDP.setSelected(false) ;
            jFusionDPds.setForeground(Color.BLUE);
        }
    }//GEN-LAST:event_jFusionDPStateChanged

    private void jCheckFusionCPStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckFusionCPStateChanged
        jFusionCPStateChanged (null) ;
    }//GEN-LAST:event_jCheckFusionCPStateChanged

    private void jFusionCPStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jFusionCPStateChanged
        int p = (int) jFusionCP.getValue() ;
        if (OrthoCotation.baseValues.patientAge.years != 0) {
            double ds = OrthoCotation.baseValues.updateFusionCP ( p, jCheckFusionCP.isSelected() ) ;
            jFusionCPds.setText(String.format("%+.2f", ds) + " DS");
            jFusionCPds.setToolTipText(null);
            jFusionCPds.setForeground(Color.RED);
        }
        else {
            jFusionCPds.setText("[no age]") ;
            jFusionCPds.setToolTipText("Précisez la date de naissance...");
            jCheckFusionCP.setSelected(false) ;
            jFusionCPds.setForeground(Color.BLUE);
        }
    }//GEN-LAST:event_jFusionCPStateChanged

    private void jCheckFusionDLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckFusionDLStateChanged
        jFusionDLStateChanged (null) ;
    }//GEN-LAST:event_jCheckFusionDLStateChanged

    private void jFusionDLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jFusionDLStateChanged
        int p = (int) jFusionDL.getValue() ;
        double ds = OrthoCotation.baseValues.updateFusionDL ( p, jCheckFusionDL.isSelected() ) ;
        jFusionDLds.setText(String.format("%+.2f", ds) + " DS");
    }//GEN-LAST:event_jFusionDLStateChanged

    private void jCheckFusionCLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckFusionCLStateChanged
        jFusionCLStateChanged (null) ;
    }//GEN-LAST:event_jCheckFusionCLStateChanged

    private void jFusionCLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jFusionCLStateChanged
        int p = (int) jFusionCL.getValue() ;
        double ds = OrthoCotation.baseValues.updateFusionCL ( p, jCheckFusionCL.isSelected() ) ;
        jFusionCLds.setText(String.format("%+.2f", ds) + " DS");
    }//GEN-LAST:event_jFusionCLStateChanged

    private void jCheckFusionCLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckFusionCLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckFusionCLActionPerformed

    private void jPPCStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jPPCStateChanged
        double p = (double) jPPC.getValue() ;
        double ds = OrthoCotation.baseValues.updatePPC ( p, jCheckPPC.isSelected() ) ;
        jPPCds.setText(String.format("%+.2f", ds) + " DS");
    }//GEN-LAST:event_jPPCStateChanged

    private void jPPCPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPPCPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jPPCPropertyChange

    public void updateFromAge () {
        // D'
        jFusionDPStateChanged (null) ;
        jCheckFusionDP.setSelected(true) ;
        // C'
        jFusionCPStateChanged (null) ;
        jCheckFusionCP.setSelected(true) ;
        //PPA
        jPPAStateChanged (null) ;
        jCheckPPA.setSelected(true) ;
    }
    
    private void jPPAStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jPPAStateChanged
        double p = (double) jPPA.getValue() ;
        p = 100 / p ;
        if (OrthoCotation.baseValues.patientAge.years != 0) {
            double ds = OrthoCotation.baseValues.updatePPA ( p, jCheckPPA.isSelected() ) ;
            jUnit8.setText ("cm (soit " + String.format("%+.2f", p) + " \u03B4)") ;
            jPPAds.setText(String.format("%+.2f", ds) + " DS");
            jPPAds.setToolTipText(null);
            jPPAds.setForeground(Color.RED);
            jUnit8.setLocation(jUnit7.getX(), jUnit8.getY());
            jUnit8.setSize(150, jUnit8.getHeight());
        }
        else {
            jPPAds.setText("[no age]") ;
            jPPAds.setForeground(Color.BLUE);
            jPPAds.setToolTipText("Précisez la date de naissance...");
            jCheckPPA.setSelected(false) ;
        }
    }//GEN-LAST:event_jPPAStateChanged

    private void jCheckPPCStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckPPCStateChanged
        jPPCStateChanged (null) ;
    }//GEN-LAST:event_jCheckPPCStateChanged

    private void jCheckPPAStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckPPAStateChanged
        jPPAStateChanged (null) ;
    }//GEN-LAST:event_jCheckPPAStateChanged

    private void jCheckACAStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckACAStateChanged
        if (!gradientACA_isValid & !calculACA_isValid) jCheckACA.setSelected(false);
        else {
            OrthoCotation.baseValues.aca.selected = jCheckACA.isSelected() ;
            OrthoCotation.polarChart.updateDataset () ;
        }
    }//GEN-LAST:event_jCheckACAStateChanged

    private void jACA_0StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jACA_0StateChanged
        gradientACA () ;
    }//GEN-LAST:event_jACA_0StateChanged

    private void jACA_0PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jACA_0PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jACA_0PropertyChange

    private void jACA_1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jACA_1StateChanged
        gradientACA () ;
    }//GEN-LAST:event_jACA_1StateChanged

    private void jACA_1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jACA_1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jACA_1PropertyChange

    private void jACA_2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jACA_2StateChanged
        gradientACA () ;
    }//GEN-LAST:event_jACA_2StateChanged

    private void jACA_2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jACA_2PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jACA_2PropertyChange

    private void jACA_3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jACA_3StateChanged
        gradientACA () ;
    }//GEN-LAST:event_jACA_3StateChanged

    private void jACA_3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jACA_3PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jACA_3PropertyChange

    private void jGradientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGradientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jGradientActionPerformed

    private void jEIPStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jEIPStateChanged
        calculACA () ;
    }//GEN-LAST:event_jEIPStateChanged

    private void jEIPPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jEIPPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jEIPPropertyChange

    private void jACA_PLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jACA_PLStateChanged
        calculACA () ;
    }//GEN-LAST:event_jACA_PLStateChanged

    private void jACA_PLPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jACA_PLPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jACA_PLPropertyChange

    private void jACA_PPStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jACA_PPStateChanged
        calculACA () ;
    }//GEN-LAST:event_jACA_PPStateChanged

    private void jACA_PPPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jACA_PPPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jACA_PPPropertyChange

    private void jACA_CalculActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jACA_CalculActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jACA_CalculActionPerformed

    private void jACAStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jACAStateChanged
        double a = (double) jACA.getValue() ;
        if (!gradientACA_isValid & !calculACA_isValid) jCheckACA.setSelected(false);
        else {
            double ds = OrthoCotation.baseValues.updateACA(a, jCheckACA.isSelected()) ;
            jACAds.setText(String.format("%+.2f", ds) + " DS");
            OrthoCotation.polarChart.updateDataset () ;
        }
    }//GEN-LAST:event_jACAStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner jACA;
    private javax.swing.JSpinner jACA_0;
    private javax.swing.JSpinner jACA_1;
    private javax.swing.JSpinner jACA_2;
    private javax.swing.JSpinner jACA_3;
    private javax.swing.JTextField jACA_Calcul;
    private javax.swing.JSpinner jACA_PL;
    private javax.swing.JSpinner jACA_PP;
    private javax.swing.JLabel jACAds;
    private javax.swing.JCheckBox jCheckACA;
    private javax.swing.JCheckBox jCheckFusionCL;
    private javax.swing.JCheckBox jCheckFusionCP;
    private javax.swing.JCheckBox jCheckFusionDL;
    private javax.swing.JCheckBox jCheckFusionDP;
    private javax.swing.JCheckBox jCheckPPA;
    private javax.swing.JCheckBox jCheckPPC;
    private javax.swing.JCheckBox jCheckPhorieL;
    private javax.swing.JCheckBox jCheckPhorieP;
    private javax.swing.JSpinner jEIP;
    private javax.swing.JSpinner jFusionCL;
    private javax.swing.JLabel jFusionCLds;
    private javax.swing.JSpinner jFusionCP;
    private javax.swing.JLabel jFusionCPds;
    private javax.swing.JSpinner jFusionDL;
    private javax.swing.JLabel jFusionDLds;
    private javax.swing.JSpinner jFusionDP;
    private javax.swing.JLabel jFusionDPds;
    private javax.swing.JTextField jGradient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner jPPA;
    private javax.swing.JLabel jPPAds;
    private javax.swing.JSpinner jPPC;
    private javax.swing.JLabel jPPCds;
    private javax.swing.JSpinner jPhorieL;
    private javax.swing.JLabel jPhorieLds;
    private javax.swing.JSpinner jPhorieP;
    private javax.swing.JLabel jPhoriePds;
    private javax.swing.JLabel jUnit1;
    private javax.swing.JLabel jUnit10;
    private javax.swing.JLabel jUnit2;
    private javax.swing.JLabel jUnit3;
    private javax.swing.JLabel jUnit4;
    private javax.swing.JLabel jUnit5;
    private javax.swing.JLabel jUnit6;
    private javax.swing.JLabel jUnit7;
    private javax.swing.JLabel jUnit8;
    private javax.swing.JLabel jUnit9;
    // End of variables declaration//GEN-END:variables
}

class MyMouseListener extends MouseAdapter {
  public void mouseClicked(MouseEvent evt) {
      System.out.println("click");
    if (evt.getClickCount() == 3) {
      System.out.println("triple-click");
    } else if (evt.getClickCount() == 2) {
      System.out.println("double-click");
    }
  }
}